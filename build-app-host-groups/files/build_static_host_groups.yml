# (c) 2017 DataNexus Inc.  All Rights Reserved
---
# grab the name of the host group being created and construct
# the name of the node list fact that will be set based on the
# inputs in the 'host_group_item' map (below)
- set_fact:
    hg_item_name: "{{host_group_item.name}}"
    node_list_name: "{{host_group_item.name + '_nodes'}}"
# if an 'inventory_file' **was not** provided in the 'host_group_item'
# map, then set up our inventory map and node list from the 'inventory'
# and 'node_list' fields in the 'host_group_item' map
- block:
  - set_fact:
      hg_item_inventory: "{{host_group_item.inventory | default({})}}"
      hg_item_nodes: "{{host_group_item.node_list | default([])}}"
  run_once: true
  when: (host_group_item.inventory_file | default('')) == ''
# if an 'inventory_file' **was** provided in the 'host_group_item' map,
# then set up our inventory map and node list by from the contents of
# the `inventory_file` passed in as part of the 'host_group_item' map
# (by parsing it as a static inventory file)
- block:
  - local_action: "shell {{playbook_dir}}/common-utils/inventory/static/hostsfile.py --filename {{host_group_item.inventory_file}}"
    register: zookeeper_inventory_out
  - set_fact:
      hg_item_inventory: "{{(zookeeper_inventory_out.stdout | from_json)._meta.hostvars}}"
  - set_fact:
      hg_item_nodes: "{{ hg_item_inventory | json_query('keys(@)') }}"
  run_once: true
  when: (host_group_item.inventory_file | default('')) != ''
# set the node list fact based on the input 'node_list_name'
- set_fact:
    "{{node_list_name}}": "{{hg_item_nodes}}"
# Create an application host group (adding the ansible connection information
# from the static inventory information that was passed in or parsed (if any)
- add_host:
    name: "{{item}}"
    groups: "{{hg_item_name}}"
    ansible_ssh_host: "{{(((hg_item_inventory[item] | default({})).ansible_ssh_host) | default(item))}}"
    ansible_ssh_port: "{{(((hg_item_inventory[item] | default({})).ansible_ssh_port) | default(22))}}"
    ansible_ssh_user: "{{(((hg_item_inventory[item] | default({})).ansible_ssh_user) | default(ansible_user))}}"
    ansible_ssh_private_key_file: "{{(((hg_item_inventory[item] | default({})).ansible_ssh_private_key_file) | default(ansible_ssh_private_key_file))}}"
  with_items: "{{hg_item_nodes}}"
  run_once: true
  when: hg_item_inventory != {}
# if no inventory information was found, then simply setup the appropriate host
# group from the input node list
- add_host:
    name: "{{item}}"
    groups: "{{hg_item_name}}"
  with_items: "{{hg_item_nodes}}"
  run_once: true
  when: hg_item_inventory == {}
